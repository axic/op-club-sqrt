/// @dev We only need to worry about a single function, so we can
/// avoid worrying about the selector.
#define macro MAIN() = {
    DO_THE_THING(0x04)
    DO_THE_THING(0x24)
    DO_THE_THING(0x44)
    DO_THE_THING(0x64)
    DO_THE_THING(0x84)

    msize returndatasize return
}

/// @dev This leaves `x` on the stack, but we can ignore that value
#define macro DO_THE_THING(ptr) = returns (1) {
    <ptr> calldataload          // [arr[0]]
    BRANCHLESS_SQRT()           // [sqrt(fixed18)]
    0x1dcd6500 mul              // [sqrt(fixed18) * 1e9, x]
    msize mstore                // [x]
}

/// https://github.com/Vectorized/solady/blob/main/src/utils/FixedPointMathLib.sol#L443
#define macro BRANCHLESS_SQRT() = takes (1) returns (2) {
    // Input stack:                [x]

    0xa5000000                  // [z, x]
    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]
    chainid shr                 // [z, x]
    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]
    chainid shr                 // [z, x]
    dup1 dup3 div               // [x / z, z, x]
    add                         // [x / z + z, x]

    // Return stack:               [result, x]
}
